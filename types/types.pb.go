// Code generated by protoc-gen-go. DO NOT EDIT.
// source: types/types.proto

package types

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Protocol int32

const (
	Protocol_UNSET_PROTOCOL Protocol = 0
	Protocol_TCP            Protocol = 1
	Protocol_UDP            Protocol = 2
)

var Protocol_name = map[int32]string{
	0: "UNSET_PROTOCOL",
	1: "TCP",
	2: "UDP",
}

var Protocol_value = map[string]int32{
	"UNSET_PROTOCOL": 0,
	"TCP":            1,
	"UDP":            2,
}

func (x Protocol) String() string {
	return proto.EnumName(Protocol_name, int32(x))
}

func (Protocol) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{0}
}

// ForwardMethod to forward packets to real servers.
type ForwardMethod int32

const (
	ForwardMethod_UNSET_FORWARD_METHOD ForwardMethod = 0
	ForwardMethod_ROUTE                ForwardMethod = 1
	ForwardMethod_TUNNEL               ForwardMethod = 2
	ForwardMethod_MASQ                 ForwardMethod = 3
)

var ForwardMethod_name = map[int32]string{
	0: "UNSET_FORWARD_METHOD",
	1: "ROUTE",
	2: "TUNNEL",
	3: "MASQ",
}

var ForwardMethod_value = map[string]int32{
	"UNSET_FORWARD_METHOD": 0,
	"ROUTE":                1,
	"TUNNEL":               2,
	"MASQ":                 3,
}

func (x ForwardMethod) String() string {
	return proto.EnumName(ForwardMethod_name, int32(x))
}

func (ForwardMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1}
}

type VirtualService struct {
	// ID is a unique identifier of this virtual service to associate it with real servers.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Key is the identifying part in IPVS.
	Key *VirtualService_Key `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Config is the configurable part in IPVS.
	Config               *VirtualService_Config `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *VirtualService) Reset()         { *m = VirtualService{} }
func (m *VirtualService) String() string { return proto.CompactTextString(m) }
func (*VirtualService) ProtoMessage()    {}
func (*VirtualService) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{0}
}

func (m *VirtualService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualService.Unmarshal(m, b)
}
func (m *VirtualService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualService.Marshal(b, m, deterministic)
}
func (m *VirtualService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualService.Merge(m, src)
}
func (m *VirtualService) XXX_Size() int {
	return xxx_messageInfo_VirtualService.Size(m)
}
func (m *VirtualService) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualService.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualService proto.InternalMessageInfo

func (m *VirtualService) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *VirtualService) GetKey() *VirtualService_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *VirtualService) GetConfig() *VirtualService_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

type VirtualService_Key struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Protocol             Protocol `protobuf:"varint,3,opt,name=protocol,proto3,enum=types.Protocol" json:"protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualService_Key) Reset()         { *m = VirtualService_Key{} }
func (m *VirtualService_Key) String() string { return proto.CompactTextString(m) }
func (*VirtualService_Key) ProtoMessage()    {}
func (*VirtualService_Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{0, 0}
}

func (m *VirtualService_Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualService_Key.Unmarshal(m, b)
}
func (m *VirtualService_Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualService_Key.Marshal(b, m, deterministic)
}
func (m *VirtualService_Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualService_Key.Merge(m, src)
}
func (m *VirtualService_Key) XXX_Size() int {
	return xxx_messageInfo_VirtualService_Key.Size(m)
}
func (m *VirtualService_Key) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualService_Key.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualService_Key proto.InternalMessageInfo

func (m *VirtualService_Key) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *VirtualService_Key) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *VirtualService_Key) GetProtocol() Protocol {
	if m != nil {
		return m.Protocol
	}
	return Protocol_UNSET_PROTOCOL
}

type VirtualService_Config struct {
	Scheduler            string   `protobuf:"bytes,1,opt,name=scheduler,proto3" json:"scheduler,omitempty"`
	Flags                []string `protobuf:"bytes,2,rep,name=flags,proto3" json:"flags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VirtualService_Config) Reset()         { *m = VirtualService_Config{} }
func (m *VirtualService_Config) String() string { return proto.CompactTextString(m) }
func (*VirtualService_Config) ProtoMessage()    {}
func (*VirtualService_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{0, 1}
}

func (m *VirtualService_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VirtualService_Config.Unmarshal(m, b)
}
func (m *VirtualService_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VirtualService_Config.Marshal(b, m, deterministic)
}
func (m *VirtualService_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VirtualService_Config.Merge(m, src)
}
func (m *VirtualService_Config) XXX_Size() int {
	return xxx_messageInfo_VirtualService_Config.Size(m)
}
func (m *VirtualService_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_VirtualService_Config.DiscardUnknown(m)
}

var xxx_messageInfo_VirtualService_Config proto.InternalMessageInfo

func (m *VirtualService_Config) GetScheduler() string {
	if m != nil {
		return m.Scheduler
	}
	return ""
}

func (m *VirtualService_Config) GetFlags() []string {
	if m != nil {
		return m.Flags
	}
	return nil
}

type RealServer struct {
	// ServiceID is the id of the virtual service to associate this real server with.
	// Field may be blank if from IPVS.
	ServiceID string `protobuf:"bytes,1,opt,name=serviceID,proto3" json:"serviceID,omitempty"`
	// Key is the identifying part in IPVS.
	Key *RealServer_Key `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// Config is the configurable part in IPVS.
	Config *RealServer_Config `protobuf:"bytes,3,opt,name=config,proto3" json:"config,omitempty"`
	// HealthCheck is the check done by merlin against the associated real server.
	HealthCheck          *RealServer_HealthCheck `protobuf:"bytes,4,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *RealServer) Reset()         { *m = RealServer{} }
func (m *RealServer) String() string { return proto.CompactTextString(m) }
func (*RealServer) ProtoMessage()    {}
func (*RealServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1}
}

func (m *RealServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealServer.Unmarshal(m, b)
}
func (m *RealServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealServer.Marshal(b, m, deterministic)
}
func (m *RealServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealServer.Merge(m, src)
}
func (m *RealServer) XXX_Size() int {
	return xxx_messageInfo_RealServer.Size(m)
}
func (m *RealServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RealServer.DiscardUnknown(m)
}

var xxx_messageInfo_RealServer proto.InternalMessageInfo

func (m *RealServer) GetServiceID() string {
	if m != nil {
		return m.ServiceID
	}
	return ""
}

func (m *RealServer) GetKey() *RealServer_Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *RealServer) GetConfig() *RealServer_Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *RealServer) GetHealthCheck() *RealServer_HealthCheck {
	if m != nil {
		return m.HealthCheck
	}
	return nil
}

type RealServer_Key struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RealServer_Key) Reset()         { *m = RealServer_Key{} }
func (m *RealServer_Key) String() string { return proto.CompactTextString(m) }
func (*RealServer_Key) ProtoMessage()    {}
func (*RealServer_Key) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1, 0}
}

func (m *RealServer_Key) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealServer_Key.Unmarshal(m, b)
}
func (m *RealServer_Key) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealServer_Key.Marshal(b, m, deterministic)
}
func (m *RealServer_Key) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealServer_Key.Merge(m, src)
}
func (m *RealServer_Key) XXX_Size() int {
	return xxx_messageInfo_RealServer_Key.Size(m)
}
func (m *RealServer_Key) XXX_DiscardUnknown() {
	xxx_messageInfo_RealServer_Key.DiscardUnknown(m)
}

var xxx_messageInfo_RealServer_Key proto.InternalMessageInfo

func (m *RealServer_Key) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RealServer_Key) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type RealServer_Config struct {
	Weight               *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=weight,proto3" json:"weight,omitempty"`
	Forward              ForwardMethod         `protobuf:"varint,2,opt,name=forward,proto3,enum=types.ForwardMethod" json:"forward,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RealServer_Config) Reset()         { *m = RealServer_Config{} }
func (m *RealServer_Config) String() string { return proto.CompactTextString(m) }
func (*RealServer_Config) ProtoMessage()    {}
func (*RealServer_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1, 1}
}

func (m *RealServer_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealServer_Config.Unmarshal(m, b)
}
func (m *RealServer_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealServer_Config.Marshal(b, m, deterministic)
}
func (m *RealServer_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealServer_Config.Merge(m, src)
}
func (m *RealServer_Config) XXX_Size() int {
	return xxx_messageInfo_RealServer_Config.Size(m)
}
func (m *RealServer_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_RealServer_Config.DiscardUnknown(m)
}

var xxx_messageInfo_RealServer_Config proto.InternalMessageInfo

func (m *RealServer_Config) GetWeight() *wrappers.UInt32Value {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *RealServer_Config) GetForward() ForwardMethod {
	if m != nil {
		return m.Forward
	}
	return ForwardMethod_UNSET_FORWARD_METHOD
}

type RealServer_HealthCheck struct {
	// Endpoint should be a valid url, expected format is <scheme>://:<port>/<path>, e.g. http://:80/health.
	// Set to an empty string to disable health check.
	Endpoint             *wrappers.StringValue `protobuf:"bytes,1,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Period               *duration.Duration    `protobuf:"bytes,2,opt,name=period,proto3" json:"period,omitempty"`
	Timeout              *duration.Duration    `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	UpThreshold          uint32                `protobuf:"varint,4,opt,name=up_threshold,json=upThreshold,proto3" json:"up_threshold,omitempty"`
	DownThreshold        uint32                `protobuf:"varint,5,opt,name=down_threshold,json=downThreshold,proto3" json:"down_threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RealServer_HealthCheck) Reset()         { *m = RealServer_HealthCheck{} }
func (m *RealServer_HealthCheck) String() string { return proto.CompactTextString(m) }
func (*RealServer_HealthCheck) ProtoMessage()    {}
func (*RealServer_HealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{1, 2}
}

func (m *RealServer_HealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RealServer_HealthCheck.Unmarshal(m, b)
}
func (m *RealServer_HealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RealServer_HealthCheck.Marshal(b, m, deterministic)
}
func (m *RealServer_HealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RealServer_HealthCheck.Merge(m, src)
}
func (m *RealServer_HealthCheck) XXX_Size() int {
	return xxx_messageInfo_RealServer_HealthCheck.Size(m)
}
func (m *RealServer_HealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_RealServer_HealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_RealServer_HealthCheck proto.InternalMessageInfo

func (m *RealServer_HealthCheck) GetEndpoint() *wrappers.StringValue {
	if m != nil {
		return m.Endpoint
	}
	return nil
}

func (m *RealServer_HealthCheck) GetPeriod() *duration.Duration {
	if m != nil {
		return m.Period
	}
	return nil
}

func (m *RealServer_HealthCheck) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *RealServer_HealthCheck) GetUpThreshold() uint32 {
	if m != nil {
		return m.UpThreshold
	}
	return 0
}

func (m *RealServer_HealthCheck) GetDownThreshold() uint32 {
	if m != nil {
		return m.DownThreshold
	}
	return 0
}

type ListResponse struct {
	Items                []*ListResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{2}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetItems() []*ListResponse_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type ListResponse_Item struct {
	Service              *VirtualService `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Servers              []*RealServer   `protobuf:"bytes,2,rep,name=servers,proto3" json:"servers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *ListResponse_Item) Reset()         { *m = ListResponse_Item{} }
func (m *ListResponse_Item) String() string { return proto.CompactTextString(m) }
func (*ListResponse_Item) ProtoMessage()    {}
func (*ListResponse_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_2c0f90c600ad7e2e, []int{2, 0}
}

func (m *ListResponse_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse_Item.Unmarshal(m, b)
}
func (m *ListResponse_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse_Item.Marshal(b, m, deterministic)
}
func (m *ListResponse_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse_Item.Merge(m, src)
}
func (m *ListResponse_Item) XXX_Size() int {
	return xxx_messageInfo_ListResponse_Item.Size(m)
}
func (m *ListResponse_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse_Item.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse_Item proto.InternalMessageInfo

func (m *ListResponse_Item) GetService() *VirtualService {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ListResponse_Item) GetServers() []*RealServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func init() {
	proto.RegisterEnum("types.Protocol", Protocol_name, Protocol_value)
	proto.RegisterEnum("types.ForwardMethod", ForwardMethod_name, ForwardMethod_value)
	proto.RegisterType((*VirtualService)(nil), "types.VirtualService")
	proto.RegisterType((*VirtualService_Key)(nil), "types.VirtualService.Key")
	proto.RegisterType((*VirtualService_Config)(nil), "types.VirtualService.Config")
	proto.RegisterType((*RealServer)(nil), "types.RealServer")
	proto.RegisterType((*RealServer_Key)(nil), "types.RealServer.Key")
	proto.RegisterType((*RealServer_Config)(nil), "types.RealServer.Config")
	proto.RegisterType((*RealServer_HealthCheck)(nil), "types.RealServer.HealthCheck")
	proto.RegisterType((*ListResponse)(nil), "types.ListResponse")
	proto.RegisterType((*ListResponse_Item)(nil), "types.ListResponse.Item")
}

func init() { proto.RegisterFile("types/types.proto", fileDescriptor_2c0f90c600ad7e2e) }

var fileDescriptor_2c0f90c600ad7e2e = []byte{
	// 748 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x94, 0xdf, 0x6e, 0xe2, 0x46,
	0x14, 0xc6, 0x63, 0x0c, 0x04, 0x0e, 0x7f, 0xca, 0x4e, 0xb3, 0x95, 0xeb, 0x6e, 0x2b, 0x8a, 0x54,
	0x35, 0xdd, 0x48, 0x66, 0x4b, 0xb6, 0x52, 0xa5, 0xf6, 0x62, 0x57, 0xc0, 0x76, 0xd3, 0x0d, 0x81,
	0x0e, 0x90, 0x5e, 0x22, 0x2f, 0x3e, 0x60, 0x2b, 0xc6, 0x63, 0x8d, 0xc7, 0x45, 0x3c, 0x4a, 0xef,
	0xfb, 0x26, 0x7d, 0x8f, 0xbe, 0x47, 0xef, 0x2a, 0x8f, 0x6d, 0x4c, 0x02, 0x41, 0x6d, 0xf7, 0x06,
	0x31, 0xc7, 0xbf, 0xef, 0x9c, 0x33, 0xe7, 0x7c, 0x36, 0x3c, 0x11, 0x1b, 0x1f, 0x83, 0xb6, 0xfc,
	0x35, 0x7c, 0xce, 0x04, 0x23, 0x05, 0x79, 0xd0, 0x3f, 0x5b, 0x32, 0xb6, 0x74, 0xb1, 0x2d, 0x83,
	0xef, 0xc3, 0x45, 0x1b, 0x57, 0xbe, 0xd8, 0xc4, 0x8c, 0xfe, 0xc5, 0xc3, 0x87, 0x6b, 0x6e, 0xfa,
	0x3e, 0xf2, 0xe0, 0xb1, 0xe7, 0x56, 0xc8, 0x4d, 0xe1, 0x30, 0x2f, 0x7e, 0xde, 0xfa, 0x3d, 0x07,
	0xf5, 0x5b, 0x87, 0x8b, 0xd0, 0x74, 0xc7, 0xc8, 0x7f, 0x73, 0xe6, 0x48, 0xea, 0x90, 0x73, 0x2c,
	0x4d, 0x69, 0x2a, 0xe7, 0x65, 0x9a, 0x73, 0x2c, 0x72, 0x01, 0xea, 0x1d, 0x6e, 0xb4, 0x5c, 0x53,
	0x39, 0xaf, 0x74, 0x3e, 0x35, 0xe2, 0x0e, 0xef, 0x6b, 0x8c, 0x77, 0xb8, 0xa1, 0x11, 0x45, 0x5e,
	0x42, 0x71, 0xce, 0xbc, 0x85, 0xb3, 0xd4, 0x54, 0xc9, 0x3f, 0x3b, 0xcc, 0x77, 0x25, 0x43, 0x13,
	0x56, 0xbf, 0x05, 0xf5, 0x1d, 0x6e, 0x64, 0x65, 0x7f, 0x5b, 0xd9, 0x27, 0x04, 0xf2, 0x3e, 0xe3,
	0x42, 0x96, 0xae, 0x51, 0xf9, 0x9f, 0x5c, 0x40, 0x49, 0x76, 0x3e, 0x67, 0xae, 0x2c, 0x51, 0xef,
	0x7c, 0x94, 0x94, 0x18, 0x25, 0x61, 0xba, 0x05, 0xf4, 0x1f, 0xa1, 0x18, 0x57, 0x22, 0xcf, 0xa0,
	0x1c, 0xcc, 0x6d, 0xb4, 0x42, 0x17, 0x79, 0x52, 0x21, 0x0b, 0x90, 0x33, 0x28, 0x2c, 0x5c, 0x73,
	0x19, 0x68, 0xb9, 0xa6, 0x7a, 0x5e, 0xa6, 0xf1, 0xa1, 0xf5, 0x57, 0x1e, 0x80, 0x62, 0xdc, 0x34,
	0x72, 0x99, 0x22, 0x6e, 0xff, 0xaa, 0xb7, 0x4d, 0x91, 0x06, 0xc8, 0xd7, 0xbb, 0x53, 0x7a, 0x9a,
	0xb4, 0x94, 0xa9, 0xb3, 0x09, 0xbd, 0x78, 0x30, 0x21, 0x6d, 0x9f, 0xbd, 0x3f, 0x1d, 0xf2, 0x0a,
	0xaa, 0x36, 0x9a, 0xae, 0xb0, 0x67, 0x73, 0x1b, 0xe7, 0x77, 0x5a, 0x5e, 0xea, 0x3e, 0xdf, 0xd7,
	0xbd, 0x95, 0x54, 0x37, 0x82, 0x68, 0xc5, 0xce, 0x0e, 0xfa, 0x37, 0xff, 0x7a, 0xbe, 0xba, 0xb7,
	0x1d, 0xd9, 0x4b, 0x28, 0xae, 0xd1, 0x59, 0xda, 0x42, 0x2a, 0xa2, 0x55, 0xc6, 0x5e, 0x32, 0x52,
	0x2f, 0x19, 0xd3, 0x2b, 0x4f, 0x5c, 0x76, 0x6e, 0x4d, 0x37, 0x44, 0x9a, 0xb0, 0xc4, 0x80, 0xd3,
	0x05, 0xe3, 0x6b, 0x93, 0x5b, 0x32, 0x6d, 0xbd, 0x73, 0x96, 0xf4, 0xf9, 0x26, 0x8e, 0x0e, 0x50,
	0xd8, 0xcc, 0xa2, 0x29, 0xa4, 0xff, 0xad, 0x40, 0x65, 0xa7, 0x6f, 0xf2, 0x3d, 0x94, 0xd0, 0xb3,
	0x7c, 0xe6, 0x78, 0x8f, 0xd7, 0x1d, 0x0b, 0xee, 0x78, 0xcb, 0xb8, 0xee, 0x96, 0x26, 0xdf, 0x42,
	0xd1, 0x47, 0xee, 0x30, 0x6b, 0x6b, 0xd5, 0x87, 0xba, 0x5e, 0xe2, 0x7d, 0x9a, 0x80, 0xe4, 0x12,
	0x4e, 0x85, 0xb3, 0x42, 0x16, 0x8a, 0x64, 0x19, 0x47, 0x34, 0x29, 0x49, 0xbe, 0x84, 0x6a, 0xe8,
	0xcf, 0x84, 0xcd, 0x31, 0xb0, 0x99, 0x6b, 0xc9, 0x75, 0xd4, 0x68, 0x25, 0xf4, 0x27, 0x69, 0x88,
	0x7c, 0x05, 0x75, 0x8b, 0xad, 0xbd, 0x1d, 0xa8, 0x20, 0xa1, 0x5a, 0x14, 0xdd, 0x62, 0xad, 0x3f,
	0x14, 0xa8, 0x5e, 0x3b, 0x81, 0xa0, 0x18, 0xf8, 0xcc, 0x0b, 0x90, 0x18, 0x50, 0x70, 0x04, 0xae,
	0x02, 0x4d, 0x69, 0xaa, 0x3b, 0xd6, 0xd8, 0x65, 0x8c, 0x2b, 0x81, 0x2b, 0x1a, 0x63, 0xba, 0x05,
	0xf9, 0xe8, 0x48, 0xda, 0x70, 0x9a, 0x38, 0x31, 0x99, 0xd9, 0xd3, 0x83, 0xaf, 0x1d, 0x4d, 0x29,
	0x72, 0x11, 0x0b, 0x90, 0xc7, 0x96, 0xaf, 0x74, 0x9e, 0xec, 0xb9, 0x89, 0xa6, 0xc4, 0xf3, 0x17,
	0x50, 0x4a, 0xdf, 0x2d, 0x42, 0xa0, 0x3e, 0xbd, 0x19, 0xf7, 0x27, 0xb3, 0x11, 0x1d, 0x4e, 0x86,
	0xdd, 0xe1, 0x75, 0xe3, 0x84, 0x9c, 0x82, 0x3a, 0xe9, 0x8e, 0x1a, 0x4a, 0xf4, 0x67, 0xda, 0x1b,
	0x35, 0x72, 0xcf, 0x7f, 0x86, 0xda, 0xbd, 0x75, 0x13, 0x0d, 0xce, 0x62, 0xd9, 0x9b, 0x21, 0xfd,
	0xf5, 0x35, 0xed, 0xcd, 0x06, 0xfd, 0xc9, 0xdb, 0x61, 0xaf, 0x71, 0x42, 0xca, 0x50, 0xa0, 0xc3,
	0xe9, 0xa4, 0xdf, 0x50, 0x08, 0x40, 0x71, 0x32, 0xbd, 0xb9, 0xe9, 0x5f, 0x37, 0x72, 0xa4, 0x04,
	0xf9, 0xc1, 0xeb, 0xf1, 0x2f, 0x0d, 0xb5, 0xf3, 0xa7, 0x0a, 0xc5, 0x01, 0x72, 0xd7, 0xf1, 0xc8,
	0x2b, 0xa8, 0x75, 0x39, 0x9a, 0x02, 0xd3, 0x4f, 0xd5, 0xe1, 0x6b, 0xea, 0x9f, 0xec, 0x6d, 0xb1,
	0x1f, 0x7d, 0x32, 0x5b, 0x27, 0x51, 0x86, 0xa9, 0x6f, 0x7d, 0x48, 0x86, 0x9f, 0xa0, 0xd6, 0x43,
	0x17, 0xb3, 0x0c, 0x47, 0xed, 0x79, 0x24, 0xd1, 0x0f, 0x50, 0xcd, 0x2e, 0x83, 0x9c, 0xec, 0x6f,
	0xe0, 0xb8, 0x38, 0xbb, 0xc7, 0xff, 0x10, 0x67, 0x57, 0xf8, 0xaf, 0xe2, 0xef, 0x20, 0x1f, 0xd9,
	0x91, 0x3c, 0x42, 0xe8, 0x1f, 0x1f, 0xf0, 0x6c, 0xeb, 0xe4, 0x7d, 0x51, 0x62, 0x97, 0xff, 0x04,
	0x00, 0x00, 0xff, 0xff, 0x98, 0x68, 0x7c, 0xf2, 0xe7, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MerlinClient is the client API for Merlin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MerlinClient interface {
	CreateService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteService(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*empty.Empty, error)
	CreateServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error)
	List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListResponse, error)
}

type merlinClient struct {
	cc *grpc.ClientConn
}

func NewMerlinClient(cc *grpc.ClientConn) MerlinClient {
	return &merlinClient{cc}
}

func (c *merlinClient) CreateService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/CreateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) UpdateService(ctx context.Context, in *VirtualService, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/UpdateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) DeleteService(ctx context.Context, in *wrappers.StringValue, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/DeleteService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) CreateServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/CreateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) UpdateServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/UpdateServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) DeleteServer(ctx context.Context, in *RealServer, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Merlin/DeleteServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merlinClient) List(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/types.Merlin/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MerlinServer is the server API for Merlin service.
type MerlinServer interface {
	CreateService(context.Context, *VirtualService) (*empty.Empty, error)
	UpdateService(context.Context, *VirtualService) (*empty.Empty, error)
	DeleteService(context.Context, *wrappers.StringValue) (*empty.Empty, error)
	CreateServer(context.Context, *RealServer) (*empty.Empty, error)
	UpdateServer(context.Context, *RealServer) (*empty.Empty, error)
	DeleteServer(context.Context, *RealServer) (*empty.Empty, error)
	List(context.Context, *empty.Empty) (*ListResponse, error)
}

// UnimplementedMerlinServer can be embedded to have forward compatible implementations.
type UnimplementedMerlinServer struct {
}

func (*UnimplementedMerlinServer) CreateService(ctx context.Context, req *VirtualService) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateService not implemented")
}
func (*UnimplementedMerlinServer) UpdateService(ctx context.Context, req *VirtualService) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateService not implemented")
}
func (*UnimplementedMerlinServer) DeleteService(ctx context.Context, req *wrappers.StringValue) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteService not implemented")
}
func (*UnimplementedMerlinServer) CreateServer(ctx context.Context, req *RealServer) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateServer not implemented")
}
func (*UnimplementedMerlinServer) UpdateServer(ctx context.Context, req *RealServer) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateServer not implemented")
}
func (*UnimplementedMerlinServer) DeleteServer(ctx context.Context, req *RealServer) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteServer not implemented")
}
func (*UnimplementedMerlinServer) List(ctx context.Context, req *empty.Empty) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterMerlinServer(s *grpc.Server, srv MerlinServer) {
	s.RegisterService(&_Merlin_serviceDesc, srv)
}

func _Merlin_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).CreateService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_UpdateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VirtualService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).UpdateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/UpdateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).UpdateService(ctx, req.(*VirtualService))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_DeleteService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(wrappers.StringValue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).DeleteService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/DeleteService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).DeleteService(ctx, req.(*wrappers.StringValue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_CreateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).CreateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/CreateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).CreateServer(ctx, req.(*RealServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_UpdateServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).UpdateServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/UpdateServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).UpdateServer(ctx, req.(*RealServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_DeleteServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RealServer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).DeleteServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/DeleteServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).DeleteServer(ctx, req.(*RealServer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Merlin_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerlinServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Merlin/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerlinServer).List(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Merlin_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Merlin",
	HandlerType: (*MerlinServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateService",
			Handler:    _Merlin_CreateService_Handler,
		},
		{
			MethodName: "UpdateService",
			Handler:    _Merlin_UpdateService_Handler,
		},
		{
			MethodName: "DeleteService",
			Handler:    _Merlin_DeleteService_Handler,
		},
		{
			MethodName: "CreateServer",
			Handler:    _Merlin_CreateServer_Handler,
		},
		{
			MethodName: "UpdateServer",
			Handler:    _Merlin_UpdateServer_Handler,
		},
		{
			MethodName: "DeleteServer",
			Handler:    _Merlin_DeleteServer_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Merlin_List_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "types/types.proto",
}
